<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OK+LbOYAAAAASUVORK5CYII=
</value>
  </data>
</root>